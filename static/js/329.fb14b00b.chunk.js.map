{"version":3,"file":"static/js/329.fb14b00b.chunk.js","mappings":"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","sources":["components/Servises/Servises.js","components/pages/MovieDetailsItem/MovieDetailsItem.styled.jsx","components/pages/MovieDetailsItem/MovieDetailsItem.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=7df6de4dd7060a529be76412dec8d9af';\nconst trending_all = '/trending/movie/day';\nconst search_movie = '/search/movie';\n\nexport const RequestTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${trending_all}${API_KEY}`);\n    // return response.data.results;\n    return response.data.results.map(({ id, title, poster_path }) => {\n      return {\n        id,\n        title,\n        poster_path,\n      };\n    });\n  } catch (error) {\n    console.log('ðŸš€  error RequestTrendingMovies', error);\n  }\n};\n\nexport const RequestSearchMovies = async inputValue => {\n  try {\n    const response = await axios.get(\n      `${search_movie}${API_KEY}&query=${inputValue}&language=en-US&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('ðŸš€  error RequestSearchMovies', error);\n  }\n};\n\nexport const RequestMovie_IdDetails = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('ðŸš€  error RequestMovie_Id', error);\n  }\n};\nexport const RequestMovie_IdCredits = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/credits${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('ðŸš€  error RequestMovie_IdCredits', error);\n  }\n};\nexport const RequestMovie_IdReviews = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/reviews${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('ðŸš€  error RequestMovie_IdReviews', error);\n  }\n};\n","import styled from \"styled-components\";\n\nexport const DIV = styled.div`\ndisplay: flex;\n`\nexport const Container = styled.div`\npadding: 20px;\n`\nexport const PostImg = styled.ul`\n margin-right:20px;\n`","import { DIV, PostImg,Container } from \"./MovieDetailsItem.styled\";\nimport { ThreeDots } from  'react-loader-spinner'\nimport { RequestMovie_IdDetails } from '../../Servises/Servises';\nimport { useState, useEffect ,Suspense} from \"react\";\nimport { Outlet,useParams, Link,NavLink, useLocation} from 'react-router-dom';\n\nconst MovieDetailsItem = () => {\n    const imgBaseUrl = 'https://image.tmdb.org/t/p/w500';\n    const {postId} = useParams();\n    const [trendingItem, setTrendingItem] = useState('');\n\n    const location = useLocation();\n    const backLink = location.state?.from ?? '/home';\n\n    useEffect(() => {\n        const fetchData = async () => {\n          try {\n            const movieIdDetails = await RequestMovie_IdDetails(postId);\n            setTrendingItem(movieIdDetails);\n          } catch (error) {\n            console.log(\"ðŸš€  error TrendingItem\", error);\n          }  \n    }\n    fetchData()\n    }, [postId]);\n    \n    const { id,\n        poster_path,\n        title,\n        release_date,\n        vote_average, \n        overview,\n        genres } = trendingItem;\n    \n    return (\n        <Container>\n            <Link\n                to={backLink}\n            >\n                <button type=\"button\">Go back</button>\n            </Link>\n           \n            {trendingItem && (\n            <>\n            <DIV>\n                <PostImg>\n                    <li key={id}>\n                        <img src={`${imgBaseUrl}${poster_path}`} \n                        alt={title} \n                        width={250} />\n                    </li>\n                </PostImg>\n                    <div>\n                        <h2>{title} ({release_date.split(\"-\")[0]})</h2>\n                        <p>User score : {parseInt(vote_average * 10)}%</p>\n                        <br />\n                        <p><b>Overview</b></p>\n                        <br />\n                        <p>{overview}</p>\n                        <br />\n                        <span><b>Genders</b></span>\n                        <p>\n                            {genres.map(genre => genre.name + \"  \" )}\n                        </p>                       \n                    </div>\n            </DIV>\n                <hr />\n            <div>\n                <h3>Addition information</h3>\n                        <NavLink to={`cast`} \n                            state={{ from: location.state?.from }}\n                        >Cast</NavLink>\n                        <br />\n                        <NavLink to={`reviews`}\n                            state={{ from: location.state?.from }}\n                        >Reviews</NavLink>\n            </div>      \n             </>\n            )}\n            <hr />\n            <Suspense\n                fallback={<ThreeDots \n        height=\"80\" \n        width=\"80\" \n        radius=\"9\"\n        color=\"#4fa94d\" \n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n        />}>\n                <Outlet />\n            </Suspense>\n        </Container>\n    )\n};\nexport default MovieDetailsItem;\n    \n\n\n\n"],"names":["axios","API_KEY","RequestTrendingMovies","response","data","results","map","id","title","poster_path","console","log","RequestSearchMovies","inputValue","RequestMovie_IdDetails","movie_id","RequestMovie_IdCredits","RequestMovie_IdReviews","DIV","styled","Container","PostImg","postId","useParams","useState","trendingItem","setTrendingItem","location","useLocation","backLink","state","from","useEffect","fetchData","movieIdDetails","release_date","vote_average","overview","genres","to","type","src","alt","width","split","parseInt","genre","name","Suspense","fallback","height","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible"],"sourceRoot":""}