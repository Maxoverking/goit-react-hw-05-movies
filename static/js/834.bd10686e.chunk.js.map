{"version":3,"file":"static/js/834.bd10686e.chunk.js","mappings":"kTACAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAIHC,EAAqB,mCAAG,6GAEVF,EAAAA,EAAAA,IAAA,UALN,uBAKM,OAA4BC,IAFlB,cAE3BE,EAF2B,yBAI1BA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLC,GAF6D,EAA7BA,GAGhCC,MAH6D,EAAzBA,MAIpCC,YAJ6D,EAAlBA,YAM9C,KAVgC,gCAYjCC,QAAQC,IAAI,4CAAZ,MAZiC,yDAAH,qDAgBrBC,EAAmB,mCAAG,WAAMC,GAAN,gGAERb,EAAAA,EAAAA,IAAA,UApBN,iBAoBM,OACHC,EADG,kBACcY,EADd,+CAFQ,cAEzBV,EAFyB,yBAKxBA,EAASC,MALe,gCAO/BM,QAAQC,IAAI,0CAAZ,MAP+B,yDAAH,sDAWnBG,EAAsB,mCAAG,WAAMC,GAAN,gGAEXf,EAAAA,EAAAA,IAAA,iBACXe,GADW,OACAd,EADA,oBAFW,cAE5BE,EAF4B,yBAK3BA,EAASC,MALkB,gCAOlCM,QAAQC,IAAI,sCAAZ,MAPkC,yDAAH,sDAUtBK,EAAsB,mCAAG,WAAMD,GAAN,gGAEXf,EAAAA,EAAAA,IAAA,iBACXe,EADW,mBACQd,EADR,oBAFW,cAE5BE,EAF4B,yBAK3BA,EAASC,MALkB,gCAOlCM,QAAQC,IAAI,6CAAZ,MAPkC,yDAAH,sDAUtBM,EAAsB,mCAAG,WAAMF,GAAN,gGAEXf,EAAAA,EAAAA,IAAA,iBACXe,EADW,mBACQd,EADR,2BAFW,cAE5BE,EAF4B,yBAK3BA,EAASC,MALkB,gCAOlCM,QAAQC,IAAI,6CAAZ,MAPkC,yDAAH,qD,oJChBnC,EAjCgB,WACZ,IAAOO,GAAUC,EAAAA,EAAAA,MAAVD,OACP,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAK,mCAAG,8GAEoBP,EAAAA,EAAAA,IAAuBC,GAF3C,OAEAO,EAFA,OAGNH,EAAWG,GAHL,gDAKNf,QAAQC,IAAI,sBAAZ,MALM,yDAAH,qDAQXa,GACH,GAAE,CAACN,KAGJ,yBACKG,GAAWA,EAAQhB,QAAQqB,OAAS,GACjC,+BACA,wBACKL,EAAQhB,QAAQC,KAAI,gBAAEC,EAAF,EAAEA,GAAIoB,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACjB,2BACI,wBAAKD,KACL,uBAAIC,MAFCrB,EADQ,SAQtB,qEAGd,C","sources":["components/Servises/Servises.js","components/pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=7df6de4dd7060a529be76412dec8d9af';\nconst trending_all = '/trending/movie/day';\nconst search_movie = '/search/movie';\n\nexport const RequestTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${trending_all}${API_KEY}`);\n    // return response.data.results;\n    return response.data.results.map(({ id, title, poster_path }) => {\n      return {\n        id,\n        title,\n        poster_path,\n      };\n    });\n  } catch (error) {\n    console.log('ðŸš€  error RequestTrendingMovies', error);\n  }\n};\n\nexport const RequestSearchMovies = async inputValue => {\n  try {\n    const response = await axios.get(\n      `${search_movie}${API_KEY}&query=${inputValue}&language=en-US&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('ðŸš€  error RequestSearchMovies', error);\n  }\n};\n\nexport const RequestMovie_IdDetails = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('ðŸš€  error RequestMovie_Id', error);\n  }\n};\nexport const RequestMovie_IdCredits = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/credits${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('ðŸš€  error RequestMovie_IdCredits', error);\n  }\n};\nexport const RequestMovie_IdReviews = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/reviews${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('ðŸš€  error RequestMovie_IdReviews', error);\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {RequestMovie_IdReviews } from '../../Servises/Servises';\n\nconst Reviews = () => {\n    const {postId} = useParams();\n    const [reviews, setReviews] = useState(null);\n\n    useEffect(() => {\n        const fetch = async () => {\n            try {\n                const reviewsData = await RequestMovie_IdReviews(postId);\n                setReviews(reviewsData);\n            } catch (error) {\n                console.log(\"ðŸš€  error\", error);\n            }\n        }\n        fetch();\n    }, [postId]);\n    // console.log(\"ðŸš€  reviews\", reviews);\n    return (\n    <div>\n        {reviews && reviews.results.length > 0 ? (\n            <>\n            <ul>\n                {reviews.results.map(({id, author, content  }) => (\n                    <li key={id}>\n                        <h3>{author}</h3>\n                        <p>{content}</p>\n                    </li>\n                ))}   \n            </ul>\n            </>\n            ):(<span>We don't have reviews for this movie.</span>)}\n    </div>\n    )\n};\nexport default Reviews;"],"names":["axios","API_KEY","RequestTrendingMovies","response","data","results","map","id","title","poster_path","console","log","RequestSearchMovies","inputValue","RequestMovie_IdDetails","movie_id","RequestMovie_IdCredits","RequestMovie_IdReviews","postId","useParams","useState","reviews","setReviews","useEffect","fetch","reviewsData","length","author","content"],"sourceRoot":""}