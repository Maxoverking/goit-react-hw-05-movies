{"version":3,"file":"static/js/810.d0c726fb.chunk.js","mappings":"kTACAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAIHC,EAAqB,mCAAG,6GAEVF,EAAAA,EAAAA,IAAA,UALN,uBAKM,OAA4BC,IAFlB,cAE3BE,EAF2B,yBAI1BA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLC,GAF6D,EAA7BA,GAGhCC,MAH6D,EAAzBA,MAIpCC,YAJ6D,EAAlBA,YAM9C,KAVgC,gCAYjCC,QAAQC,IAAI,4CAAZ,MAZiC,yDAAH,qDAgBrBC,EAAmB,mCAAG,WAAMC,GAAN,gGAERb,EAAAA,EAAAA,IAAA,UApBN,iBAoBM,OACHC,EADG,kBACcY,EADd,+CAFQ,cAEzBV,EAFyB,yBAKxBA,EAASC,MALe,gCAO/BM,QAAQC,IAAI,0CAAZ,MAP+B,yDAAH,sDAWnBG,EAAsB,mCAAG,WAAMC,GAAN,gGAEXf,EAAAA,EAAAA,IAAA,iBACXe,GADW,OACAd,EADA,oBAFW,cAE5BE,EAF4B,yBAK3BA,EAASC,MALkB,gCAOlCM,QAAQC,IAAI,sCAAZ,MAPkC,yDAAH,sDAUtBK,EAAsB,mCAAG,WAAMD,GAAN,gGAEXf,EAAAA,EAAAA,IAAA,iBACXe,EADW,mBACQd,EADR,oBAFW,cAE5BE,EAF4B,yBAK3BA,EAASC,MALkB,gCAOlCM,QAAQC,IAAI,6CAAZ,MAPkC,yDAAH,sDAUtBM,EAAsB,mCAAG,WAAMF,GAAN,gGAEXf,EAAAA,EAAAA,IAAA,iBACXe,EADW,mBACQd,EADR,2BAFW,cAE5BE,EAF4B,yBAK3BA,EAASC,MALkB,gCAOlCM,QAAQC,IAAI,6CAAZ,MAPkC,yDAAH,qD,0JCnDtBO,EAASC,EAAAA,GAAAA,GAAH,mHAONC,EAASD,EAAAA,GAAAA,GAAH,0G,4BCkCnB,EArCa,WACT,IACOE,GAAUC,EAAAA,EAAAA,MAAVD,OACP,GAAyBE,EAAAA,EAAAA,UAAS,MAAlC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAK,mCAAG,8GAEiBX,EAAAA,EAAAA,IAAuBK,GAFxC,OAEAO,EAFA,OAGNH,EAAQG,GAHF,gDAKNlB,QAAQC,IAAI,sBAAZ,MALM,yDAAH,qDAQXgB,GACH,GAAE,CAACN,KAEJ,yBACKG,IACG,+BACA,SAACN,EAAD,UACKM,EAAMK,KAAKvB,KAAI,gBAAEC,EAAF,EAAEA,GAAIuB,EAAN,EAAMA,aAAcC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,UAA1B,OACZ,UAACZ,EAAD,YACI,0BACI,gBAAKa,IAAKH,EAAY,UAvB3B,mCAuB2B,OAAmBA,GAAiBI,EACtDC,IAAKJ,EAAMK,MAAO,QAEtB,uBAAIL,KACJ,2CAAmBC,OANdzB,EADD,SAe/B,C","sources":["components/Servises/Servises.js","components/pages/Cast/Cast.styled.jsx","components/pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=7df6de4dd7060a529be76412dec8d9af';\nconst trending_all = '/trending/movie/day';\nconst search_movie = '/search/movie';\n\nexport const RequestTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${trending_all}${API_KEY}`);\n    // return response.data.results;\n    return response.data.results.map(({ id, title, poster_path }) => {\n      return {\n        id,\n        title,\n        poster_path,\n      };\n    });\n  } catch (error) {\n    console.log('ðŸš€  error RequestTrendingMovies', error);\n  }\n};\n\nexport const RequestSearchMovies = async inputValue => {\n  try {\n    const response = await axios.get(\n      `${search_movie}${API_KEY}&query=${inputValue}&language=en-US&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('ðŸš€  error RequestSearchMovies', error);\n  }\n};\n\nexport const RequestMovie_IdDetails = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('ðŸš€  error RequestMovie_Id', error);\n  }\n};\nexport const RequestMovie_IdCredits = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/credits${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('ðŸš€  error RequestMovie_IdCredits', error);\n  }\n};\nexport const RequestMovie_IdReviews = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/reviews${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('ðŸš€  error RequestMovie_IdReviews', error);\n  }\n};\n","import styled from  \"styled-components\";\n\nexport const CastUl = styled.ul` \n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 8px;\n  padding: 0;\n\n`\nexport const CastLi = styled.li`\n    display: inline-flex;\n    flex-direction: column;\n    align-items: center;\n`\n\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { CastLi, CastUl } from './Cast.styled'\nimport defaultImg from '../../image/def.jpeg'\nimport { RequestMovie_IdCredits } from '../../Servises/Servises';\n\nconst Cast = () => {\n    const imgBaseUrl = 'https://image.tmdb.org/t/p/w500';\n    const {postId} = useParams();\n    const [casts, setCast] = useState(null);\n\n    useEffect(() => {\n        const fetch = async () => {\n            try {\n                const castData = await RequestMovie_IdCredits(postId);\n                setCast(castData);\n            } catch (error) {\n                console.log(\"ðŸš€  error\", error);\n            }\n        }\n        fetch();\n    }, [postId]);\n    return (\n    <div>\n        {casts && (\n            <>\n            <CastUl>\n                {casts.cast.map(({id, profile_path, name, character }) => (\n                    <CastLi key={id}>\n                        <div>\n                            <img src={profile_path ? `${imgBaseUrl}${profile_path}` : defaultImg}\n                                alt={name} width={80} />\n                        </div>    \n                            <p>{name}</p>\n                            <span>Character : {character }</span>\n                    </CastLi>\n                ))}   \n            </CastUl>\n            </>\n            )}\n    </div>\n    )\n};\nexport default Cast;"],"names":["axios","API_KEY","RequestTrendingMovies","response","data","results","map","id","title","poster_path","console","log","RequestSearchMovies","inputValue","RequestMovie_IdDetails","movie_id","RequestMovie_IdCredits","RequestMovie_IdReviews","CastUl","styled","CastLi","postId","useParams","useState","casts","setCast","useEffect","fetch","castData","cast","profile_path","name","character","src","defaultImg","alt","width"],"sourceRoot":""}